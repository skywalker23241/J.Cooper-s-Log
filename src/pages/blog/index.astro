---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Tag from '../../components/Tag.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import heroA from '../../assets/cooper-s-coding-notes.jpg';
import heroB from '../../assets/cooper-s-seo-summary.jpg';
import heroC from '../../assets/after-i-turn-off-alarm.webp';
import heroF from '../../assets/how-to-use-vpn-correctly.jpg';
import heroG from '../../assets/root-one-plus-8t-9008-oxgen-os.jpg';
import heroH from '../../assets/what-is-mcp.png';
import heroE from '../../assets/sere-tools.png';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const heroMap = {
  'hero-a': heroA,
  'hero-b': heroB,
  'hero-c': heroC,
  'hero-f': heroF,
  "hero-g": heroG,
  "hero-h": heroH,
  "hero-e": heroE,
};
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			/* Blog list specific styles */
			.blog-main {
				width: 100%;
				max-width: 960px;
				margin: 0 auto;
				padding: 0 1rem;
			}
			.blog-grid {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			.blog-item {
				width: calc(50% - 1rem);
			}
			.blog-item:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			.blog-item:first-child .blog-title {
				font-size: 2.369rem;
			}
			.blog-link {
				display: block;
				padding: 0.5rem;
				text-decoration: none;
				transition: 0.2s ease;
			}
			.blog-image {
				width: 100%;
				height: auto;
				margin-bottom: 0.5rem;
				border-radius: 12px;
				transition: box-shadow 0.2s ease;
			}
			.blog-title {
				margin: 0;
				color: var(--text-color);
				line-height: 1.2;
				word-wrap: break-word;
				transition: color 0.2s ease;
			}
			.blog-date {
				margin: 0;
				color: var(--text-color);
				opacity: 0.7;
				transition: color 0.2s ease;
			}
			.blog-desc {
				margin: 0.25rem 0 0.5rem 0;
				color: var(--text-color);
				opacity: 0.9;
				line-height: 1.4;
			}
			.blog-meta {
				display: flex;
				flex-wrap: wrap;
				gap: 0.5rem;
				align-items: center;
			}
			.chip {
				display: inline-block;
				padding: 0.25rem 0.5rem;
				border-radius: 999px;
				background: var(--bg-accent);
				color: var(--text-color);
				font-size: 0.8em;
				text-decoration: none;
			}
			.blog-link:hover .blog-title,
			.blog-link:hover .blog-date {
				color: var(--accent);
			}
			.blog-link:hover .blog-image {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				.blog-grid {
					gap: 0.5rem;
				}
				.blog-item {
					width: 100%;
					text-align: center;
				}
				.blog-item:first-child {
					margin-bottom: 0;
				}
				.blog-item:first-child .blog-title {
					font-size: 1.563rem;
				}
				.blog-meta {
					justify-content: center;
				}
				.blog-title {
					font-size: 1.2rem;
					line-height: 1.3;
					margin-bottom: 0.5rem;
				}
				.blog-desc {
					font-size: 0.9rem;
					line-height: 1.4;
					margin: 0.5rem 0;
					display: -webkit-box;
					-webkit-line-clamp: 3;
					-webkit-box-orient: vertical;
					overflow: hidden;
				}
				.blog-date {
					font-size: 0.85rem;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main class="blog-main">
			<section>
				<ul class="blog-grid">
					{
						posts.map((post) => {
							const imageSrc = heroMap[post.data.heroImage as keyof typeof heroMap];
							const tags = (post.data.tags ?? []).map((t) => t.toLowerCase());
							const category = post.data.category?.toLowerCase().trim();
							return (
								<li class="blog-item">
									<a href={`/blog/${post.id}/`} class="blog-link">
										{imageSrc && (
										<Image
											src={imageSrc}
											alt="title"
											width={720}
											height={360}
											loading="lazy"
											class="blog-image"
										/>
										)}
										<h4 class="blog-title">{post.data.title}</h4>
										<p class="blog-date"><FormattedDate date={post.data.pubDate} /></p>
										<p class="blog-desc">{post.data.description}</p>
									</a>
									<div class="blog-meta">
										{category && (
											<a class="chip" href={`/categories/${encodeURIComponent(category)}/`}>üìÅ {category}</a>
										)}
										{tags.map((t) => (
											<Tag href={`/tags/${encodeURIComponent(t)}/`}>#{t}</Tag>
										))}
									</div>
								</li>
							);
						})
					}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>
